version: '3.8'

services:
  traefik:
    image: traefik:v2.11
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "8090:8080"
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Add a constraint to only use services with the label for this stack
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Create an entrypoint "http" listening on port 80
      - --entrypoints.http.address=:80
      # Create an entrypoint "https" listening on port 443
      - --entrypoints.https.address=:443
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable debug logging for local development
      - --log.level=DEBUG
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
    labels:
      # Enable Traefik for this service, to make it available in the public network
      - traefik.enable=true
      - traefik.constraint-label=traefik-public
      # Dummy https-redirect middleware that doesn't really redirect, only to
      # allow running it locally
      - traefik.http.middlewares.https-redirect.contenttype.autodetect=false

  test-db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_DB=${TEST_POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${TEST_POSTGRES_USER?Variable not set}
    ports:
      - '5433:5432'
    restart: unless-stopped

  db:
    restart: unless-stopped
    ports:
      - "5432:5432"
  
  api:
    volumes:
      - './app:/app/app'
    ports:
      - '8888:8888'
    restart: unless-stopped
    command: /start-reload.sh
    build: 
      context: .
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}

  motoserver:
    image: 'motoserver/moto:latest'
    ports:
      - '5000:5000'
    environment:
      - MOTO_PORT=5000


networks:
  traefik-public:
    # For local dev, don't expect an external Traefik network
    external: false
