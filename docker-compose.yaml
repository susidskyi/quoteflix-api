version: '3.8'

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}

  api:
    image: ${IMAGE_NAME?Variable not set}
    restart: unless-stopped
    networks:
      - traefik-public
      - default
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DEBUG_LOGS=${DEBUG_LOGS}
      - ENVIRONMENT=${ENVIRONMENT}
      - S3_BUCKET=${S3_BUCKET}
      - SECRET=${SECRET}
      - SCENES_TMP_PATH=${SCENES_TMP_PATH}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION_NAME=${AWS_REGION_NAME}
      - MOVIES_S3_PATH=${MOVIES_S3_PATH}
      - DOMAIN=${DOMAIN}
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public

      - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=80

      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=Host(`${DOMAIN?Variable not set}`, `www.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.entrypoints=http

      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.rule=Host(`${DOMAIN?Variable not set}`, `www.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.tls.certresolver=le
    build:
      context: .
      args:
        - INSTALL_DEV=${INSTALL_DEV-false}
    command: /start.sh

networks:
  traefik-public:
    external: true

volumes:
  app-db-data:
