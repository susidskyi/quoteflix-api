services:
  traefik:
    image: traefik:v3.0.1
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "8090:8080"
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Add a constraint to only use services with the label for this stack
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Create an entrypoint "http" listening on port 80
      - --entrypoints.http.address=:80
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable debug logging for local development
      - --log.level=WARN
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
    labels:
      # Enable Traefik for this service, to make it available in the public network
      - traefik.enable=true
      - traefik.constraint-label=traefik-public
      - traefik.log.level=WARN
    depends_on:
      - api

  api:
    volumes:
      - './app:/app/app'
    ports:
      - '8888:8888'
    restart: unless-stopped
    command: /start-reload.sh
    networks:
      - traefik-public
    labels:
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=Host(`${DOMAIN?Variable not set}`) && PathPrefix(`/api/`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.entrypoints=http
    depends_on:
      - minio
      - redis

  minio:
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    command: server --console-address ":9001" /data/
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-storage-r:/data
    networks:
      - traefik-public

  redis:
    restart: unless-stopped
    image: redis:7.2.5-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 128mb
    networks:
      - traefik-public
    volumes:
      - redis-db-data:/data
    ports:
      - "6380:6379"
    environment:
      REDIS_PORT: 6379

networks:
  traefik-public:
    # For local dev, don't expect an external Traefik network
    external: false

volumes:
  minio-storage-r:
